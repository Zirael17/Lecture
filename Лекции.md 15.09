# Переменные
Команда input() обозначает "подожди пока пользователь введет что нибудь с клавиатуры и запомни то что он ввёл". Просто просить "запомнить" довольно бессмысленно: нам ведь потом надо будет как то сказать компьютеру чтобы он вспомнил то что запомнил. Для этого используем переменные напишем следующий код:
variable_name = input()
print('Вы ввели текст', variable_name)
Данный код означает: "Сохрани то что ввел пользователь в памяти и дальше это место в памяти мы будем называть именем variable_name". Соотвественно команда print(variable_name) означает "Посмотри что лежит в памяти, под именем variable_name и выведи это на экран".
Такие "места в памяти" **называется переменными. Любая переменная имеет имя и значение.
#Имя переменной
В имени переменной используйте только латинские буквы a-z A-Z цифры и символ нижнего подчеркивания (_)
Имя переменной не может начинаться с цифры
Имя переменной по возможности должно отражать её назначение.
Python регистро-чувствительнй язык. Переменная name и Name две совершенно разные переменные. Для именования переменных принято использовать стиль lower_case_with_underscores (слова из маленьких букв с подчеркиваниями).
# Значение переменной - сохраненная в ней информации (число,текст и т д)
Знак "=" это **оператор присваивания. Он присваивает значение, которое находится справа от знака "равно" переменной которая находится слева от знака "равно" 
В нашем случае это то что поместил в нее пользователь командной input(). Это текстовое значение - строка. То есть переменная сохраняет в себе строковое значение. Говорят что переменная имеет строковый тип данных.
Запомни: интерпретатор ждет,что пользователь что то введт с клавиатуры ровно столько раз, сколько команд input() встречается в программею Каждый input() завершается нажатием **Enter на клавиатуре.
Если вы хотите чтобы у вас была переменная с каким то именем и каким то значением нужно написать на отдельной строчке:
<имя переменной> = <значение переменной>
Название переменной всегда должно быть слева от знака равенства.
Следующий код приведет к ошибке 'Timur' = name
# Множественное присваивание
В языке Python можно за одну инструкцию присваивания изменять значения сразу нескольких переменных. Делается это так:
name, surname - 'Timur', 'Guev'
print ('Имя:' name, 'Фамилия:', surname)
Этот код можно записать и так:
name - 'Timur'
surname 'Guev'
print ('Имя:' name, 'Фамилия:', surname)
Если требуется считать текст с клавиатуры и присвоить его в качестве значения переменным, то можно написать так:
name, surname = input(), input()
print('Имя' , name 'Фамилия' , surname)
Множественное присваивание удобно использовать когда нужно обменять значение двух переменных. В Python это делается так:
name1 = 'Timur'
name2 = 'Gvido'
name1 , name2 = name2, name1
#Примечания 
Примечание 1.
Название переменных ничего не говорят интерпретатору и даже в очень хорошо названной переменной не появится нужное значение, если мы его сами туда не запишем.
Примечание 2.
Новое значение пременной вытесняет старое. Важно представлять, чему равно значение переменной в каждый момент времени.
Примечание 3.
Переменные можно вводить в любой момент (не только в самом начале программы).
Примечание 4.
В качестве название переменных запрещено использовать ключевые (зарезервированные) слова. К ключевым словам в языке Python относятся:
